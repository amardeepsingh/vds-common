<?xml version="1.0"?>
<project name="VDS.Common Library" default="build">
  <description>Generates the VDS.Common Library Builds</description>
    
  <!-- Licensing Properties -->
  <property name="common.License.exclude.exts" 
            value="dll,pdb,exe,xml,xaml,xsd,dtd,xshd,config,xslt,ttl,rdf,out,rq,trig,trix,ru,nt,n3,nq,srx,owl,srj,json,txt,csv,tsv,csproj,user,template,cache,pfx,sql,resources,resx,properties,settings,html,xhtml,css,js,sparql,bak,ico,png,jpg,tiff,bmp,orig" />
  <property name="common.License.exclude.regex" value="hg|svn|obj|bin" />
  <property name="common.License.search" value="Copyright (c) 2012 Robert Vesse" />
  <property name="common.License.replace" value="License.txt" />
  <property name="common.License.overwrite" value="-overwrite" /> <!-- Alternative is -preserve which does not change existing Licenses -->
  
  <!-- Signing Properties -->
  <property name="common.keyfile" value="${project::get-base-directory()}VDS.Common.snk" />

  <!-- Version Properties -->
  <!-- When generating ZIP files with the dist targets use the command line -d option to set these appropriately -->
  <property name="common.version" value="080" />
  
  <!-- Names of ZIP Files generated by dist targets -->
  <property name="common.libzip" value="VDS.Common.${common.version}.zip" />
  <property name="commin.srczip" value="VDS.Common.${common.version}.Source.zip" />
    
  <!-- Project Generation Targets which generate some Project Files from others -->

  <target name="projectsync-core-net35" description="Syncs the dotNetRDF .Net 3.5 build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Core .Net 3.5 project file with the Core Library -->
    <exec program="Build/SyncProjects/bin/Debug/SyncProjects.exe">
      <arg value="sync" />
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg value="Libraries/core/net35/dotNetRDF.Net35.csproj" />
    </exec>
  </target>

  <target name="projectsync-core-silverlight" description="Syncs the dotNetRDF Silverlight build project file" depends="compile-buildtools" unless="${dotnetrdf.nosilverlight == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Silverlight project file with the Core Library -->
    <exec program="Build/SyncProjects/bin/Debug/SyncProjects.exe">
      <arg value="sync" />
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg value="Libraries/core/sl4/dotNetRDF.Silverlight.2010.csproj" />
    </exec>    
  </target>

  <target name="projectsync-core-windowsphone" description="Syncs the dotNetRDF Windows Phone build project file" depends="compile-buildtools" unless="${dotnetrdf.nowindowsphone == 'true' or dotnetrdf.nocompile == 'true'}">
    <!-- This exec task syncs the Windows Phone project file with the Core Library -->
    <exec program="Build/SyncProjects/bin/Debug/SyncProjects.exe">
      <arg value="sync" />
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg value="Libraries/core/sl4-wp/dotNetRDF.WindowsPhone.2010.csproj" />
    </exec>
  </target>

  <target name="projectsync-core-clientprofile" description="Syncs the dotNetRDF Client Profile build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Client Profile project file with the Core Library -->
    <exec program="Build/SyncProjects/bin/Debug/SyncProjects.exe">
      <arg value="sync" />
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg value="Libraries/core/net40-client/dotNetRDF.ClientProfile.csproj" />
    </exec>
  </target>

  <target name="projectsync-core-clientprofile-net35" description="Syncs the dotNetRDF Client Profile .Net 3.5 build project file" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <!-- This exec task syncs the Client Profile project file with the Core Library -->    
    <exec program="Build/SyncProjects/bin/Debug/SyncProjects.exe">
      <arg value="sync" />
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg value="Libraries/core/net35-client/dotNetRDF.ClientProfile.Net35.csproj" />
    </exec>
  </target>

  <!-- License Targets which enforce License headers on the code -->

  <target name="License" description="Applies License headers to all targets" depends="license-lib,license-test />

  <target name="license-lib" description="Applies License headers to the Library" depends="compile-buildtools" unless="${dotnetrdf.nocompile}">
    <exec program="Build/LicenseChecker/bin/Debug/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="src/net40/" />
      <arg value="-exclude-exts" />
      <arg value="${common.License.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${common.License.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${common.License.search}" />
      <arg value="-license-file" />
      <arg value="${common.License.replace}" />
      <arg value="-fix" />
      <arg value="${common.License.overwrite}" />
    </exec>
  </target>

  <!-- Compile Targets which Compile the Code -->

  <target name="compile" description="Compile the dotNetRDF released builds" depends="compile-libs" />

  <target name="compile-libs" description="Compiles all libraries"
          depends="compile-lib-net40,
				   compile-lib-net40-clientprofile,
				   compile-lib-net35,
				   compile-lib-net35-clientprofile,
				   compile-lib-sl4,
				   compile-lib-sl4-wp7">
  </target>
          
  <target name="compile-core" description="Compiles just the dotNetRDF Core Library" depends="license-core" unless="${dotnetrdf.nocompile}">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="Libraries/core/net40/dotNetRDF.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/p:DefineConstants=&quot;DEBUG,NET40,NANT&quot;" />
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>

  <target name="compile-core-net35" description="Compile the dotNetRDF Core .Net 3.5 Build" unless="${dotnetrdf.nocompile}" depends="license-core,projectsync-core-net35">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/net35/dotNetRDF.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>

  <target name="compile-core-silverlight" description="Compile the dotNetRDF Silverlight Build"  unless="${dotnetrdf.nocompile}" depends="license-core,projectsync-core-silverlight">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/sl4/dotNetRDF.Silverlight.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>

  <target name="compile-core-windowsphone" description="Compile the dotNetRDF Windows Phone Build"  unless="${dotnetrdf.nocompile == 'true' or dotnetrdf.nowindowsphone == 'true'}" depends="license-core,projectsync-core-windowsphone">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <property name="msBuild.exe" value="${string::replace(msBuild.exe,'Framework64','Framework')}" if="${string::contains(msBuild.exe, 'Framework64')}" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/sl4-wp/dotNetRDF.WindowsPhone.2010.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>

  <target name="compile-core-clientprofile" description="Compiles the dotNetRDF Client Profile Build" unless="${dotnetrdf.nocompile}" depends="license-core,projectsync-core-clientprofile">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/net40-client/dotNetRDF.ClientProfile.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>

  <target name="compile-core-clientprofile-net35" description="Compiles the dotNetRDF Client Profile .Net 3.5 Build" unless="${dotnetrdf.nocompile}" depends="license-core,projectsync-core-clientprofile-net35">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true">
      <arg value="Libraries/core/net35-client/dotNetRDF.ClientProfile.Net35.csproj" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/p:NoWarn=&quot;${dotnetrdf.nowarn}&quot;" />
      <arg line="/p:KeyOriginatorFile=&quot;${dotnetrdf.keyfile}&quot;" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>
    
  <!-- Build Targets -->
    
  <target name="build-core" description="Copy the latest build to the Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/net40/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/net40/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/net40/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40/" file="Libraries/core/net40/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-net35" description="Copy the latest 3.5 build to the Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core/net35/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core/net35/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core/net35/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35/" file="Libraries/core/net35/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-silverlight" description="Copy the latest Silverlight build to the Silverlight Nightly Build directory" unless="${dotnetrdf.nobuild}"  depends="compile-core-silverlight">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core/sl4/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core/sl4/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core/sl4/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4/" file="Libraries/core/sl4/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-windowsphone" description="Copy the latest Windows Phone build to the Windows Phone Nightly Build directory" unless="${dotnetrdf.nobuild}" if="${dotnetrdf.nowindowsphone != 'true'}"  depends="compile-core-windowsphone">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core/sl4-wp/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core/sl4-wp/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core/sl4-wp/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/sl4-wp/" file="Libraries/core/sl4-wp/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-clientprofile" description="Copy the latest Client Profile build to the Client Profile Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-core-clientprofile">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core/net40-client/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core/net40-client/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core/net40-client/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net40-client/" file="Libraries/core/net40-client/bin/Debug/Newtonsoft.Json.dll" />
  </target>

  <target name="build-core-clientprofile-net35" description="Copy the latest Client Profile 3.5 build to the Client Profile Nightly Build directory" unless="${dotnetrdf.nobuild}" depends="compile-core-clientprofile-net35">
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core/net35-client/bin/Debug/dotNetRDF.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core/net35-client/bin/Debug/dotNetRDF.xml" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core/net35-client/bin/Debug/HtmlAgilityPack.dll" />
    <copy overwrite="true" todir="bin/nightlies/Libraries/Core/net35-client/" file="Libraries/core/net35-client/bin/Debug/Newtonsoft.Json.dll" />
  </target>
  
  <!-- Clean Targets -->

  <target name="clean" description="Cleans the bin/ and obj/ directories of all projects causing a rebuild to be necessary"
          depends="clean-intermediaries,
                   clean-dist">
  </target>

  <target name="clean-hg" description="Cleans the hg .orig files that may be left behind by reverted changes">
    <delete failonerror="false">
      <fileset>
        <include name="**/*.orig" />
      </fileset>
    </delete>
  </target>

  <target name="clean-intermediaries" description="Cleans the intermediary bin/ and obj/ directories of all projects">
    <delete failonerror="false">
      <fileset>
        <include name="**/bin/**/*" />
        <include name="**/obj/**/*" />
      </fileset>
    </delete>
  </target>

  <target name="clean-dist" description="Cleans the distibution zip files">
    <delete failonerror="false">
      <fileset>
        <include name="VDS.Common*.zip" />
      </fileset>
    </delete>
  </target>
  
  <!-- Dist Targets for creating the distribution ZIP Files -->

  <target name="dist" description="Creates the Distribution ZIP Files" depends="build">
    <zip zipfile="${dotnetrdf.libzip}" ziplevel="9">
      <fileset>
        <include name="Acknowledgments.txt" />
        <include name="License.txt" />
      </fileset>
      <fileset basedir="Libraries">
        <include name="ReadMe.txt" />
        <include name="ReleaseNotes.txt" />
        <include name="ChangeLog.txt" />
      </fileset>
      <fileset basedir="bin/stable/Libraries/" failonempty="true">
        <include name="**/*" />
      </fileset>
    </zip>
    <zip zipfile="${dotnetrdf.srczip}" ziplevel="9"> 
      <fileset failonempty="true">
        <include name="**/*" />
        <exclude name=".hg/*" />
        <exclude name="**/bin/**/*" />
        <exclude name="**/obj/**/*" />
	<exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/*.pdb" />
        <exclude name="Testing/" />
        <exclude name="TestResults/" />
        <exclude name="Samples/" />
	<exclude name="*.zip" />
	<exclude name="Utilities/bsbm/" />
	<exclude name="Build/ndoc3/docs/" />
	<exclude name="Build/NuGet/*/lib/**/*" />
        <exclude name="packages/" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nuget" description="Creates the NuGet packages" depends="build">
    <!-- Firstly clean out the relevant directories -->
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net40/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net40-client/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/net35-client/">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4">
        <include name="*" />
      </fileset>
    </delete>
    <delete>
      <fileset basedir="Build/nuget/Core/lib/sl4-wp">
        <include name="*" />
      </fileset>
    </delete>
    <!-- Then create the Core library package -->
    <copy todir="Build/nuget/Core/lib/net40/">
      <fileset basedir="bin/stable/Libraries/Core/net40/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net40-client/">
      <fileset basedir="bin/stable/Libraries/Core/net40-client/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net35/">
      <fileset basedir="bin/stable/Libraries/Core/net35/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/net35-client/">
      <fileset basedir="bin/stable/Libraries/Core/net35-client/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4/">
      <fileset basedir="bin/stable/Libraries/Core/sl4/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <copy todir="Build/nuget/Core/lib/sl4-wp/">
      <fileset basedir="bin/stable/Libraries/Core/sl4-wp/">
        <include name="dotNetRDF.*" />
      </fileset>
    </copy>
    <!-- Finally invoke nuget on the package -->
    <exec workingdir="Build/nuget/Core/" program="nuget.exe">
      <arg value="pack" />
      <arg value="dotNetRDF.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <!-- Upload Targets for Uploading the Builds to a website and Publishing NuGet Packages -->

  <target name="upload" depends="dist-nuget">
    <exec workingdir="Build/nuget/" program="nuget.exe">
      <arg value="push" />
      <arg value="VDS.Common.${dotnetrdf.nuspecversion}.nupkg" />
    </exec>
  </target>
</project>