<?xml version="1.0"?>
<project name="VDS.Common Library" default="build" basedir="..\">
  <description>Generates the VDS.Common Library Builds</description>
    
  <!-- Licensing Properties -->
  <property name="common.License.exclude.exts" 
            value="dll,pdb,exe,xml,csproj,user,template,cache,orig" />
  <property name="common.License.exclude.regex" value="hg|svn|obj|bin" />
  <property name="common.License.search" value="Copyright (c) 2012 Robert Vesse" />
  <property name="common.License.replace" value="License" />
  <property name="common.License.overwrite" value="-overwrite" /> <!-- Alternative is -preserve which does not change existing Licenses -->
  
  <!-- Signing Properties -->
  <property name="common.keyfile" value="${project::get-base-directory()}VDS.Common.snk" />

  <!-- Version Properties -->
  <!-- When generating ZIP files with the dist targets use the command line -d option to set these appropriately -->
  <property name="common.version" value="1.0.1" />
  
  <!-- Names of ZIP Files generated by dist targets -->
  <property name="common.zip" value="VDS.Common.${common.version}.zip" />
  <property name="common.srczip" value="VDS.Common.${common.version}.Source.zip" />
    
  <!-- License Targets which enforce License headers on the code -->

  <target name="license" description="Applies License headers to all targets" depends="license-lib,license-test" />

  <target name="license-lib" description="Applies License headers to the Library">
    <exec program="Build/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="src/net40-client/" />
      <arg value="-exclude-exts" />
      <arg value="${common.License.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${common.License.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${common.License.search}" />
      <arg value="-license-file" />
      <arg value="${common.License.replace}" />
      <arg value="-fix" />
      <arg value="${common.License.overwrite}" />
    </exec>
  </target>

  <target name="license-test" description="Applies License headers to the Tests">
    <exec program="Build/LicenseChecker.exe" failonerror="true">
      <arg value="-directory" />
      <arg value="test/" />
      <arg value="-exclude-exts" />
      <arg value="${common.License.exclude.exts}" />
      <arg value="-exclude" />
      <arg value="${common.License.exclude.regex}" />
      <arg value="-license-search" />
      <arg value="${common.License.search}" />
      <arg value="-license-file" />
      <arg value="${common.License.replace}" />
      <arg value="-fix" />
      <arg value="${common.License.overwrite}" />
    </exec>
  </target>

  <!-- Compile Targets which Compile the Code -->

  <target name="compile" description="Compile the dotNetRDF released builds" depends="license">
    <property name="nant.settings.currentframework" value="net-4.0" />
    <property name="msBuild.exe" value="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" />
    <exec program="${msBuild.exe}" failonerror="true" verbose="true">
      <arg value="VDS.Common.sln" />
      <arg line="/p:Configuration=Debug" />
      <arg line="/p:PostBuildEvent=" />
      <arg line="/Property:SolutionDir=${project::get-base-directory()}" />
    </exec>
  </target>
    
  <!-- Build Targets -->
    
  <target name="build" description="Create the latest build" depends="compile">
    <!-- .Net 4.0 Client Profile -->
    <copy overwrite="true" todir="Build/NuGet/lib/net40-client" file="src/net40-client/bin/Debug/VDS.Common.dll" />
    <copy overwrite="true" todir="Build/NuGet/lib/net40-client" file="src/net40-client/bin/Debug/VDS.Common.xml" />
    <!-- .Net 3.5 Client Profile -->
    <copy overwrite="true" todir="Build/NuGet/lib/net35-client" file="src/net35-client/bin/Debug/VDS.Common.dll" />
    <copy overwrite="true" todir="Build/NuGet/lib/net35-client" file="src/net35-client/bin/Debug/VDS.Common.xml" />
    <!-- Silverlight 4 -->
    <copy overwrite="true" todir="Build/NuGet/lib/sl4" file="src/sl4/bin/Debug/VDS.Common.dll" />
    <copy overwrite="true" todir="Build/NuGet/lib/sl4" file="src/sl4/bin/Debug/VDS.Common.xml" />
    <!-- Silverlight 4 for Windows Phone -->
    <copy overwrite="true" todir="Build/NuGet/lib/sl4-wp" file="src/sl4-wp/bin/Debug/VDS.Common.dll" />
    <copy overwrite="true" todir="Build/NuGet/lib/sl4-wp" file="src/sl4-wp/bin/Debug/VDS.Common.xml" />
  </target>
  
  <!-- Clean Targets -->

  <target name="clean" description="Cleans the bin/ and obj/ directories of all projects causing a rebuild to be necessary"
          depends="clean-intermediaries,
                   clean-dist">
  </target>

  <target name="clean-hg" description="Cleans the hg .orig files that may be left behind by reverted changes">
    <delete failonerror="false">
      <fileset>
        <include name="**/*.orig" />
      </fileset>
    </delete>
  </target>

  <target name="clean-intermediaries" description="Cleans the intermediary bin/ and obj/ directories of all projects">
    <delete failonerror="false">
      <fileset>
        <include name="**/bin/**/*" />
        <include name="**/obj/**/*" />
        <include name="Build/NuGet/lib/" />
      </fileset>
    </delete>
  </target>

  <target name="clean-dist" description="Cleans the distibution zip files">
    <delete failonerror="false">
      <fileset>
        <include name="VDS.Common*.zip" />
      </fileset>
    </delete>
  </target>
  
  <!-- Dist Targets for creating the distribution ZIP Files -->

  <target name="dist" description="Creates the Distribution ZIP Files" depends="build">
    <zip zipfile="${common.zip}" ziplevel="9">
      <fileset>
        <include name="License" />
        <include name="ReadMe.md" />
        <include name="ChangeLog.txt" />
      </fileset>
      <fileset basedir="Build/NuGet/lib/" failonempty="true">
        <include name="**/*" />
      </fileset>
    </zip>
    <zip zipfile="${common.srczip}" ziplevel="9"> 
      <fileset failonempty="true">
        <include name="**/*" />
        <exclude name=".hg/*" />
        <exclude name="**/bin/**/*" />
        <exclude name="**/obj/**/*" />
        <exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/*.pdb" />
        <exclude name="TestResults/" />
        <exclude name="*.zip" />
        <exclude name="Build/lib/**/*" />
      </fileset>
    </zip>
  </target>

  <target name="dist-nuget" description="Creates the NuGet packages" depends="build">
    <!-- Finally invoke nuget on the package -->
    <exec workingdir="Build/NuGet/" program="nuget.exe">
      <arg value="pack" />
      <arg value="VDS.Common.nuspec" />
      <arg value="-verbose" />
    </exec>
  </target>

  <!-- Upload Targets for Uploading the Builds to a website and Publishing NuGet Packages -->

  <target name="upload" depends="dist-nuget">
    <exec workingdir="Build/NuGet/" program="nuget.exe">
      <arg value="push" />
      <arg value="VDS.Common.${common.version}.nupkg" />
    </exec>
  </target>
</project>